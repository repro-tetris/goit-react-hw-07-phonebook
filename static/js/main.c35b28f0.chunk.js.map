{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","redux/contactsSlice.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","redux/contacts/filter/contacts-filter-actions.js","components/Filter/Filter.jsx","components/Contact/ContactItem/ContactItem.styled.js","components/Contact/ContactItem/ContactItem.jsx","components/Contact/ContactList/ContactList.jsx","App.js","redux/contacts/filter/contacts-filter-reducer.js","redux/store.js","index.js"],"names":["Label","styled","label","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","contact","url","method","body","invalidatesTags","delContact","id","useGetContactsQuery","useDelContactMutation","useAddContactMutation","ContactForm","useState","name","setName","number","setNumber","isAdding","isLoading","handleChange","target","value","reset","onSubmit","e","preventDefault","type","pattern","title","required","onChange","disabled","changeFilter","createAction","Filter","filterStr","useSelector","state","filter","dispatch","useDispatch","toLowerCase","StyledContact","li","ContactItem","deleteContact","isDeleting","onClick","getFiltered","items","includes","ContactList","data","contacts","isError","error","isFetching","filteredContacts","map","App","filterReducer","createReducer","_","action","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c35b28f0.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  + input[type=\"submit\"] {\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: aquamarine;\r\n    }\r\n  }\r\n`;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsReducer\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://616d0dc037f997001745d805.mockapi.io/contacts\",\r\n  }),\r\n  tagTypes: [\"contacts\"],\r\n  endpoints: (builder) => ({\r\n    getContacts: builder.query({\r\n      query: () => \"/contacts/\",\r\n      providesTags: [\"contacts\"],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: (contact) => ({\r\n        url: \"/contacts/\",\r\n        method: \"POST\",\r\n        body: contact,\r\n        providesTags: [\"contacts\"],\r\n      }),\r\n      invalidatesTags: [\"contacts\"],\r\n    }),\r\n\r\n    delContact: builder.mutation({\r\n      query: (id) => ({\r\n        url: `/contacts/${id}`,\r\n        method: \"DELETE\",\r\n        providesTags: [\"contacts\"],\r\n      }),\r\n      invalidatesTags: [\"contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useDelContactMutation,\r\n  useAddContactMutation,\r\n} = contactsApi;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label } from \"./ContactForm.styled\";\r\nimport { useAddContactMutation } from \"../../redux/contactsSlice\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    } else {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addContact({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n        />\r\n      </Label>\r\n      <input\r\n        disabled={isAdding}\r\n        type=\"submit\"\r\n        value={isAdding ? \"Adding contact...\" : \"Add contact\"}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contact/changeFilter\");\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label } from \"./Filter.styled\";\r\nimport { changeFilter } from \"../../redux/contacts/filter/contacts-filter-actions\";\r\n\r\nfunction Filter() {\r\n  const filterStr = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <input\r\n        name=\"filter\"\r\n        value={filterStr}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value.toLowerCase()))}\r\n      ></input>\r\n    </Label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StyledContact = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  button {\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: tomato;\r\n    }\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { StyledContact } from \"./ContactItem.styled\";\r\nimport { useDelContactMutation } from \"../../../redux/contactsSlice\";\r\nfunction ContactItem({ contact: { id, name, number } }) {\r\n  const [deleteContact, { isLoading: isDeleting }] = useDelContactMutation();\r\n\r\n  const deleteHandle = () => deleteContact(id);\r\n\r\n  return (\r\n    <StyledContact>\r\n      {name}: {number}\r\n      <button onClick={deleteHandle} disabled={isDeleting}>\r\n        {isDeleting ? \"deleting...\" : \"delete\"}{\" \"}\r\n      </button>\r\n    </StyledContact>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { ContactItem } from \"../../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useGetContactsQuery } from \"../../../redux/contactsSlice\";\r\n\r\nconst ContactList = () => {\r\n  const filter = useSelector((state) => state.filter);\r\n  const {\r\n    data: contacts = [],\r\n    isError,\r\n    error,\r\n    isFetching,\r\n  } = useGetContactsQuery();\r\n\r\n  const filteredContacts = getFiltered(filter, contacts);\r\n  if (isError) return <div>An error has occurred! {error.data}</div>;\r\n\r\n  return (\r\n    <div>\r\n      {isFetching && <p>Loading...</p>}\r\n      <ul>\r\n        {filteredContacts.map((contact) => {\r\n          return <ContactItem key={contact.id} contact={contact} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getFiltered = (filter, items) => {\r\n  return filter\r\n    ? items.filter((contact) => contact.name.toLowerCase().includes(filter))\r\n    : items;\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactList;\r\n","//import { useState, useEffect } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport { ContactList } from \"./components/Contact\";\r\n//import { saveContacts, loadContacts } from \"./components/utils/storage\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./contacts-filter-actions\";\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\r\nimport filterReducer from \"../redux/contacts/filter/contacts-filter-reducer\";\r\nimport { contactsApi } from \"./contactsSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filter: filterReducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}